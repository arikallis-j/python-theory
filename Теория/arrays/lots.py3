#Множества содержат информацию , о различных значениях
#1 способ создания множества, с помощью функции set()
a = set("hello")
#В данном множестве содержится всего 4 элемента,h,e,l,o, так как l уже записанна
print(type(a))
print(a)
#содержимое множества выводится в случайном порядке
#2 способ создания множества, как словарь без (ключей)
a = {'h','e','l','o'}
print(a)
#3 способ создания множества,с помощью цикла
a = {i ** 2 for i in range(10)}
print(type(a))
print(a)
#разница между set и frozenset
a = set('Hello')
#значения множества, созданного frozenset нельзя изменить
b = frozenset('Qverty')
#данная функция .add добавляет в множество элемент в ()
a.add(1)
print(a)
#недопустимая операция 
"""b.add(1)
print(b)"""
#функция set() преобразует списки в множества
a = ['h','e','l','l','o']
print(set(a))#'h','e','l','o'

a = {32,45,43.23,76}
x = 45
z = {32,45,43.23,76}
y = {67,12,90,76}

#функция len() выводит длинну(количество элементов) множества
len(a)#4
print(len(a))

#метод in проверяет , принадлежит ли переменная множеству
print(x in a)#True

#функция .isdisjoint() возвращает True если множества не имеют общих элементов
a.isdisjoint(y)
print(a.isdisjoint(y))#True

#проверка на совпадение множест
print(a == z)#True

#функция .update() присоединяет к данному множеству множество в ()
a.update(y)
print(a)

#В множестве остаются только общие с множеством в() элементы
a.intersection_update(y)
print(a)

#В множестве остаются только не общие с множеством в () элементы
a.difference_update(y)
print(a)

#В множестве остаются все не общие элементы множества. и добавляются все необщие элементы множества в ()
a.symmetric_difference_update(y)
print(a)

#Данная функция удаляет элемент в () из множества
a.remove(76)
print(a)

#Данная функция удаляет элемент, если он находится в множестве
a.discard(32)
print(a)

#Функция удаляет случайный элемент множества
a.pop(0)
print(a)

#Функция удаляет все элементы множества
a.clear()
print(a)